apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

android {
  compileSdkVersion buildConfig.compileSdk

  defaultConfig {
    applicationId 'com.jakewharton.sdksearch'

    minSdkVersion buildConfig.minSdk
    targetSdkVersion buildConfig.targetSdk

    versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    textReport true
    textOutput 'stdout'

    // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
    checkReleaseBuilds false
  }

  signingConfigs {
    debug {
      storeFile rootProject.file('debug.keystore')
      storePassword 'sdksearch'
      keyAlias 'sdksearch'
      keyPassword 'sdksearch'
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      signingConfig signingConfigs.debug
    }
    release {
      signingConfig signingConfigs.debug // TODO temporary

      minifyEnabled true
      proguardFiles(
          file('src/main/proguard-android.pro'),
          file('src/main/proguard-app.pro')
      )
    }
  }

  packagingOptions {
    exclude 'kotlin/**'
    exclude 'META-INF/*.kotlin_module'
    exclude 'META-INF/*.version'
  }
}

dependencies {
  implementation project(':api:dac')
  implementation project(':db')

  implementation deps.kotlin.stdlib

  implementation deps.android.support.annotations
  implementation deps.android.support.recyclerView
  implementation deps.android.support.customTabs
  implementation deps.android.support.constraintLayout

  implementation deps.rx.java
  implementation deps.rx.android
  implementation deps.rx.binding.framework

  implementation deps.timber
}
